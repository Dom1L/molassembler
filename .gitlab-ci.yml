variables:
  GIT_SUBMODULE_STRATEGY: recursive

# SSH Setup
before_script:
  - which ssh-agent || (which yum && yum install openssh-clients -y) || (which apt-get && apt-get install openssh-client -y)
  - eval $(ssh-agent -s)
  - echo $SCINE_DEPLOY_KEY | base64 -d | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo $SCINE_DEPLOY_HOSTS | base64 -d > ~/.ssh/known_hosts

stages:
  - build
  - quality

coverage:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - python3 -m pip install --upgrade conan sphinx sphinx_rtd_theme pytest numpy
    - git clone --recursive git@gitlab.chab.ethz.ch:scine/utils-open-source.git
    - conan create -o scine_utilities:python=True --build=missing utils-open-source
    - mkdir -p build_coverage
    - cd build_coverage
    - conan install -o scine_molassembler:python=True -o scine_molassembler:tests=True -o scine_molassembler:docs=True -o scine_molassembler:coverage=True ..
    - conan build ..
    - cd ..
    - python $(which gcovr) -r "$(pwd)/src/" -u --object-directory="$(pwd)/build_coverage/src/" --exclude-dir ".*test.*" --exclude-dir ".*extern.*" --exclude-dir ".*analysis.*" -e ".*extern.*" -e ".*test.*"
  coverage: '/^TOTAL.*\s+(\d+\%)$/'


gcc-release:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - python3 -m pip install --upgrade conan sphinx sphinx_rtd_theme pytest numpy
    - git clone --recursive git@gitlab.chab.ethz.ch:scine/utils-open-source.git
    - conan create -o scine_utilities:python=True --build=missing utils-open-source
    - conan create -o scine_molassembler:python=True -o scine_molassembler:docs=True -o scine_molassembler:tests=True --build=missing .


clang-release:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-clang:latest
  script:
    - python3 -m pip install --upgrade conan sphinx sphinx_rtd_theme pytest numpy
    - git clone --recursive git@gitlab.chab.ethz.ch:scine/utils-open-source.git
    - conan create -o scine_utilities:python=True --build=missing utils-open-source
    - conan create -o scine_molassembler:python=True -o scine_molassembler:docs=True -o scine_molassembler:tests=True --build=missing .


pypi:
  stage: build
  tags:
    - default_docker
  image: quay.io/pypa/manylinux2014_x86_64
  script:
    - /opt/python/cp36-cp36m/bin/python -m venv cp36-cp36m
    - source cp36-cp36m/bin/activate
    - python -m pip install conan wheel
    - mkdir -p build
    - cd build
    - git clone --recursive git@gitlab.chab.ethz.ch:scine/utils-open-source.git
    - conan create -o shared=False --build=missing utils-open-source
    - conan install -o scine_molassembler:python=True -o shared=False --build=missing ..
    - conan build .. --build
    - cd src/molassembler/python
    - python setup.py bdist_wheel
    - auditwheel show dist/*.whl
    - auditwheel repair dist/*.whl
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
    - build/src/molassembler/python/wheelhouse


license:
  stage: quality
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - bash scripts/license_validity_check.sh

complexity:
  stage: quality
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - python3 -m pip install lizard
    - cd src
    - lizard -w -s cyclomatic_complexity -C 30 -x "./extern/*" -W ../.whitelizard.txt
