variables:
  GIT_SUBMODULE_STRATEGY: recursive

# SSH Setup
default:
  before_script:
    - which ssh-agent || (which yum && yum install openssh-clients -y) || (which apt-get && apt-get install openssh-client -y)
    - eval $(ssh-agent -s)
    - echo $SCINE_DEPLOY_KEY | base64 -d | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo $SCINE_DEPLOY_HOSTS | base64 -d > ~/.ssh/known_hosts
    - export CONAN_REVISIONS_ENABLED=1

# Anchors
.conan_add_remote: &conan_add_remote
- conan remote add ci-internal $SCINE_DEPLOY_ARTIFACTORY_URL
- conan user -p $SCINE_DEPLOY_ARTIFACTORY_PASSWORD -r ci-internal $SCINE_DEPLOY_ARTIFACTORY_USERNAME

.conan_build: &conan_build
- python3 -m pip install --upgrade conan sphinx sphinx_rtd_theme pytest numpy
- conan remote add ci-internal $SCINE_DEPLOY_ARTIFACTORY_URL
- conan user -p $SCINE_DEPLOY_ARTIFACTORY_PASSWORD -r ci-internal $SCINE_DEPLOY_ARTIFACTORY_USERNAME
- conan create -o scine_molassembler:python=True -o scine_molassembler:docs=True -o scine_molassembler:tests=True --build=missing --build=scine_molassembler . ci/$CI_COMMIT_REF_SLUG
- if $CI_COMMIT_REF_PROTECTED; then conan upload `conan search scine_molassembler | tail -n1` --all -r ci-internal -c; fi

# Builds
coverage:
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - python3 -m pip install --upgrade conan sphinx sphinx_rtd_theme pytest numpy gcovr
    - *conan_add_remote
    - mkdir -p build
    - cd build
    - conan install -o scine_molassembler:python=True -o scine_molassembler:tests=True -o scine_molassembler:docs=True -o scine_molassembler:coverage=True -s scine_molassembler:build_type=Debug ..
    - conan build ..
    - cd ..
    - python3 -m gcovr -r "$(pwd)/src/" -u --object-directory="$(pwd)/build/src/" --exclude-dir ".*test.*" --exclude-dir ".*extern.*" --exclude-dir ".*analysis.*" -e ".*extern.*" -e ".*test.*" --html --html-details -o coverage.html
    - python3 -m gcovr -r "$(pwd)/src/" -u --object-directory="$(pwd)/build/src/" --exclude-dir ".*test.*" --exclude-dir ".*extern.*" --exclude-dir ".*analysis.*" -e ".*extern.*" -e ".*test.*"
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    expire_in: 1 day
    paths:
    - coverage*.html


gcc-release:
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - *conan_build


clang-release:
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-clang:latest
  script:
    - *conan_build


pypi:
  tags:
    - default_docker
  image: quay.io/pypa/manylinux2014_x86_64
  script:
    - /opt/python/cp36-cp36m/bin/python -m venv cp36-cp36m
    - source cp36-cp36m/bin/activate
    - python -m pip install conan wheel
    - *conan_add_remote
    - mkdir -p build && cd build
    - conan install -o scine_molassembler:python=True -o scine_utilities:shared=False -o scine_molassembler:shared=False --build=missing ..
    - conan build ..
    - cd src/molassembler/python
    - python setup.py bdist_wheel
    - auditwheel show dist/*.whl
    - auditwheel repair dist/*.whl
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
    - build/src/molassembler/python/wheelhouse

# Quality
license:
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - bash scripts/license_validity_check.sh

complexity:
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - python3 -m pip install lizard jinja2
    - cd src
    - lizard -l cpp -m -T nloc=100 -T cyclomatic_complexity=15 -T parameter_count=5 -x "./extern/*" -o lizard.html
    - lizard -l cpp -m -w -s cyclomatic_complexity -T cyclomatic_complexity=20 -x "./extern/*" -W ../.whitelizard.txt
  artifacts:
    expire_in: 1 day
    paths:
      - src/lizard.html
