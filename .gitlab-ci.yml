variables:
  GIT_SUBMODULE_STRATEGY: recursive

# SSH Setup
before_script:
  - which ssh-agent || (which yum && yum install openssh-clients -y) || (which apt-get && apt-get install openssh-client -y)
  - eval $(ssh-agent -s)
  - echo $SCINE_DEPLOY_KEY | base64 -d | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo $SCINE_DEPLOY_HOSTS | base64 -d > ~/.ssh/known_hosts


# Define the CI stages
stages:
  - build
  - test
  - quality_checks
  - deploy

#
# GCC Debug test and coverage
#
build:gcc_debug:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - mkdir -p build_gcc_debug
    - cd build_gcc_debug
    - pip3 install --user sphinx sphinx_rtd_theme pytest
    - cmake -DSCINE_BUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_CXX_FLAGS="-g -O0 -coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" ..
    - make -j8
  artifacts:
    expire_in: 2 hours
    paths:
      - build_gcc_debug

test:gcc_debug:
  stage: test
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - pip3 install --user pytest numpy
    - (cd build_gcc_debug/src && ctest --output-on-failure)
    - python $(which gcovr) -r "$(pwd)/src/" -u --object-directory="$(pwd)/build_gcc_debug/src/" --exclude-dir ".*test.*" --exclude-dir ".*extern.*" --exclude-dir ".*analysis.*" -e ".*extern.*" -e ".*test.*"
  dependencies:
    - build:gcc_debug
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    expire_in: 2 hours

#
# GCC Release test
#
build:gcc_release:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - mkdir -p build_gcc_release
    - cd build_gcc_release
    - cmake -DCMAKE_BUILD_TYPE=Release -DSCINE_BUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=$(which python3) ..
    - make -j8
  artifacts:
    expire_in: 2 hours
    paths:
      - build_gcc_release

test:gcc_release:
  stage: test
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - (cd build_gcc_release/src && ctest --output-on-failure)
  dependencies:
    - build:gcc_release


#
# Clang Release test
#
build:clang_release:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-clang:latest
  only:
    - master
  script:
    - mkdir -p build_clang
    - cd build_clang
    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    - make -j
  artifacts:
    expire_in: 4 hours
    paths:
      - build_clang

test:clang_release:
  stage: test
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-clang:latest
  only:
    - master
  script:
    - (cd build_clang/src && ctest --output-on-failure)
  dependencies:
    - build:clang_release

#
# Verify that the ETH license is present in all source files
#
eth_license:
  stage: quality_checks
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - bash scripts/license_validity_check.sh

# ============
#    Deploy
# ============
# Make conan package
deploy:conan:
  stage: deploy
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - python3 -m pip install conan
    - git clone --recursive git@gitlab.chab.ethz.ch:scine/utils-open-source.git
    - conan create --build=missing utils-open-source
    - conan create --build=missing .
  dependencies: []

# Make conan python package for pypi
deploy:pypi:
  stage: deploy
  tags:
    - default_docker
  image: quay.io/pypa/manylinux2014_x86_64
  script:
    - /opt/python/cp36-cp36m/bin/python -m venv cp36-cp36m
    - source cp36-cp36m/bin/activate
    - python -m pip install conan wheel
    - mkdir -p build
    - cd build
    - git clone --recursive git@gitlab.chab.ethz.ch:scine/utils-open-source.git
    - conan create -o scine_utilities:shared=False --build=missing utils-open-source
    - conan install -o scine_molassembler:python=True -o scine_utilities:shared=False --build=missing ..
    - conan build ..
    - cd src/molassembler/python
    - python setup.py bdist_wheel
    - auditwheel show dist/*.whl
    - auditwheel repair dist/*.whl
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
    - build/src/molassembler/python/wheelhouse

# Wishful thinking:
# pages:
#   # only:
#   #   - develop
#   stage: deploy
#   script:
#     - mv build_gcc_debug/src/molassembler/python/doc public
#   tags:
#     - default_docker
#   image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
#   dependencies:
#     - build:gcc_debug
#   artifacts:
#     expire_in: 30 days
#     paths:
#     - public
