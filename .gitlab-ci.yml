#
# Define the CI stages
#
stages:
  - build
  - test
  - quality_checks

#
# GCC Debug test and coverage
#
build:gcc_debug:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - mkdir -p build_gcc_debug
    - cd build_gcc_debug
    - pip3 install --user sphinx sphinx_rtd_theme pytest
    - cmake -DSCINE_BUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_CXX_FLAGS="-g -O0 -coverage" -DCMAKE_EXE_LINKER_FLAGS="-coverage" ..
    - make -j8
  artifacts:
    expire_in: 2 hours
    paths:
      - build_gcc_debug

test:gcc_debug:
  stage: test
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - pip3 install --user pytest
    - (cd build_gcc_debug/src && ctest --output-on-failure)
    - python $(which gcovr) -r "$(pwd)/src/" -u --object-directory="$(pwd)/build_gcc_debug/src/" --exclude-dir ".*test.*" --exclude-dir ".*extern.*" --exclude-dir ".*analysis.*" -e ".*extern.*" -e ".*test.*"
  dependencies:
    - build:gcc_debug
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    expire_in: 2 hours

#
# GCC Release test
#
build:gcc_release:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - mkdir -p build_gcc_release
    - cd build_gcc_release
    - cmake -DCMAKE_BUILD_TYPE=Release -DSCINE_BUILD_PYTHON_BINDINGS=ON -DPYTHON_EXECUTABLE=$(which python3) ..
    - make -j8
  artifacts:
    expire_in: 2 hours
    paths:
      - build_gcc_release

test:gcc_release:
  stage: test
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - (cd build_gcc_release/src && ctest --output-on-failure)
  dependencies:
    - build:gcc_release


#
# Clang Release test
#
build:clang_release:
  stage: build
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-clang:latest
  only:
    - master
  script:
    - mkdir -p build_clang
    - cd build_clang
    - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    - make -j8
  artifacts:
    expire_in: 4 hours
    paths:
      - build_clang

test:clang_release:
  stage: test
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-clang:latest
  only:
    - master
  script:
    - (cd build_clang/src && ctest --output-on-failure)
  dependencies:
    - build:clang_release

#
# Verify that the ETH license is present in all source files
#
eth_license:
  stage: quality_checks
  tags:
    - default_docker
  image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
  script:
    - bash scripts/license_validity_check.sh

# Wishful thinking:
# pages:
#   # only:
#   #   - develop
#   stage: deploy
#   script:
#     - mv build_gcc_debug/src/molassembler/python/doc public
#   tags:
#     - default_docker
#   image: gitlab.chab.ethz.ch:4567/reiher/docker/scine-gcc:latest
#   dependencies:
#     - build:gcc_debug
#   artifacts:
#     expire_in: 30 days
#     paths:
#     - public
